{"version":3,"file":"component---src-pages-index-js-9ab79ecea0e7d3483c41.js","mappings":"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","sources":["webpack://jnbm/./src/components/Category.js","webpack://jnbm/./src/components/CategoryContainer.js","webpack://jnbm/./src/components/SearchBar.js","webpack://jnbm/./src/components/SideMenuBar.js","webpack://jnbm/./src/layouts/Layout.js","webpack://jnbm/./src/components/BlogCard.js","webpack://jnbm/./src/components/BlogCardContainer.js","webpack://jnbm/./src/components/Pagination.js","webpack://jnbm/./src/pages/index.js","webpack://jnbm/./src/styles/components/Line.js","webpack://jnbm/./src/styles/components/LinkButton.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport {CategoryContext} from '../state/context/SelectedCategory';\nimport LinkButton from '../styles/components/LinkButton';\nimport { Column } from '../styles/StyledFlexComponents';\n\n//atom\nexport default function Category(props){\n    const {title, list} = props;\n    const {setCategory} = useContext(CategoryContext);\n    return (\n        <Column align=\"flex-end\">\n            {/* 폰트 성향상 눈에 들어오지 않고 전체적으로 크기가 작다. */}\n            <strong onClick={() => setCategory(\"All\")}>{title}</strong>\n                <Column align=\"flex-end\">\n                    {list ? list.map((item)=>(\n                        <LinkButton key={item} onClick={() => setCategory(item)}>{item}</LinkButton>\n                    )) : \"\"}\n                </Column>\n        </Column>\n    )\n}\n\n\n","import React, {useContext} from 'react'\nimport { Column, Row } from '../styles/StyledFlexComponents'\nimport Category from './Category'\nimport { CategoryContext } from '../state/context/SelectedCategory';\n// molecule\nexport default function Categories(props) {\n    const {list} = props;\n    const {setCategory} = useContext(CategoryContext);\n\n    return (\n        <Column witdh=\"100%\" align=\"flex-end\" gap=\"24px\" style={{marginTop:20}}>\n            <div onClick={() => setCategory(\"All\")}>show All List</div>\n            {list.map((item,index) => <Category key={index} title={item.title} list={item.list}/>)}\n        </Column>\n    )\n}\n","import React from 'react'\nimport { Column, Row } from '../styles/StyledFlexComponents'\n\n//atom\nexport default function SearchBar(){\n    return (\n        <Column align=\"flex-end\"\n            width= \"100%\"\n            style={{borderBottom:\"1px dashed \",paddingBottom:20}}>\n            <div style={{fontWeight:\"bold\"}}>SEARCH</div>\n            <Column width=\"50%\">\n                <input placeholder=\"검색\" style={{textAlign:\"right\"}}/>\n            </Column>\n        </Column>\n    )\n}\n","import React from 'react'\nimport { Column } from '../styles/StyledFlexComponents'\nimport CategoryContainer from './CategoryContainer'\nimport SearchBar from './SearchBar'\n\n//molecule\nexport default function SideMenuBar(props){\n    return(\n        <Column width=\"100%\" align=\"flex-end\">\n            <SearchBar/>                   \n            <CategoryContainer {...props}/>\n        </Column>\n    )\n}\n","import React from 'react'\nimport Header from '../components/Header'\nimport Line from '../styles/components/Line'\nimport { Column, Row } from '../styles/StyledFlexComponents'\n\n\nconst HeadLine = (props) => (\n    <Column align=\"center\" width=\"100%\">\n        <Header uri={props.uri}/>\n        <Line/>\n    </Column>\n)\n\nexport default function Layout(props){\n    return (\n        <Column width=\"100%\" align=\"center\">\n            {/* 항상 브라우저 사이즈의 80%를 담당하면 된다. */}\n            <Column className=\"max-width\" style={{width:\"100%\"}} align=\"center\">\n                <HeadLine uri={props.uri}/>\n                    {props.children}\n            </Column>\n        </Column>\n    )\n}\n","import React from 'react'\nimport {Icon} from \"@iconify/react\";\nimport { Link } from \"gatsby\";\nimport { DIV } from '../styles/Layout/ResponsiveLayout';\n\n// atom\nexport default function BlogCard(props) {\n    const {date, category, title, description, iconifyIconName, linkTo} = props;\n    return (\n        <Link to={linkTo} style={{textAlign:\"center\",display:\"flex\",width:\"100%\",flexDirection:\"column\",alignItems:\"center\"}}>\n        <DIV    tablet=\"row\" justify=\"space-between\"\n                className='card' height=\"100%\" align=\"center\"\n                style={{minHeight:\"6em\",borderBottom:\"1px dashed\"}}>\n                <DIV tablet_width=\"20%\" align=\"cetner\">\n                    <div style={{fontSize:20,opacity:\"80%\"}}>{category}</div>\n                    <div style={{fontSize:12}}>{date}</div>\n                </DIV>\n                <DIV tablet_width=\"50%\" align=\"center\">\n                    <div style={{fontSize:24, fontWeight:\"bold\"}}>{title}</div>\n                    <p style={{fontSize:14,height:\"\"}}>{description}</p>\n                </DIV>\n                <DIV width=\"15%\" order=\"-1\" tablet_order=\"0\">\n                    <Icon icon={iconifyIconName} style={{order:-1, margin:12}} width=\"72px\" height=\"72px\"/>\n                </DIV>\n        </DIV>\n            </Link>\n    )\n}\n","import React from 'react'\nimport { Column } from '../styles/StyledFlexComponents';\nimport BlogCard from './BlogCard';\n\n// 컨테이너의 역할은 QUERY 수신이다.\n// molecule\nexport default function BlogCardContainer(props){\n    const {postList} = props;\n    return(\n        <Column align=\"center\">\n            {postList.map((post) => (\n                <BlogCard\n                    key={post.id}\n                    linkTo={`/blog/${post.id}`}\n                    date={post.frontmatter.date}\n                    category={post.frontmatter.category}\n                    title={post.frontmatter.title}\n                    description={post.frontmatter.description}\n                    iconifyIconName={post.frontmatter.iconifyIconName}\n                />\n            ))}\n        </Column>\n    )\n}","import React, {useState, useContext, useEffect} from 'react'\nimport { CategoryContext } from '../state/context/SelectedCategory';\nimport LinkButton from '../styles/components/LinkButton'\nimport { Column, Row } from '../styles/StyledFlexComponents'\n\nexport default function Pagination(){\n    const {selectedCategory} = useContext(CategoryContext);\n    useEffect(()=>{setPageNumber(1)},[selectedCategory]);\n    const [pageNumber,setPageNumber] = useState(1);\n    const increase = () => setPageNumber(getStartInex(pageNumber + 4) + 1);\n    const dicrease = () => getStartInex(pageNumber) !== 0 ? setPageNumber(getStartInex(pageNumber - 4) + 4) : \"\";\n    const getStartInex = (number) => ((Math.ceil(number / 4) - 1) * 4);\n    const sequence = Array.from(Array(4).keys(),(x => x + 1 + getStartInex(pageNumber)))\n    return (\n        <Row width=\"100%\" height=\"4em\" align=\"center\" justify=\"space-evenly\">\n            <LinkButton onClick={dicrease}>＜이전 페이지</LinkButton>\n            {sequence.map((item,index) => (\n                <LinkButton\n                    key={index}\n                    onClick={() => setPageNumber(item)}\n                    checked={item == pageNumber}\n                    >{item}</LinkButton>\n            ))}\n            <LinkButton onClick={increase}>다음 페이지＞</LinkButton>\n        </Row>\n    )\n}\n","import { graphql } from \"gatsby\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport BlogCardContainer from \"../components/BlogCardContainer\";\nimport Pagination from \"../components/Pagination\";\nimport SideMenuBar from \"../components/SideMenuBar\";\nimport { CategoryContext } from \"../state/context/SelectedCategory\";\nimport { Column } from \"../styles/StyledFlexComponents\";\nimport Layout from \"../layouts/Layout\";\nimport { DIV, Show } from \"../styles/Layout/ResponsiveLayout\";\n\nconst blogList = [\n    {\n        title: \"Language\",\n        list:[\"Javascript\",\"TypeScript\",\"Kotlin\",\"Dart\",\"Swift\"]\n    },\n    {\n        title: \"FRONTEND\",\n        list: [\"React\",\"Vue\"]\n    },\n    {\n        title: \"MOBILE\",\n        list: [\"React Native\",\"Flutter\",\"Android Studio\",\"Swift UI\"]\n    },\n    {\n        title: \"BAKEND\",\n        list: [\"Nest\",\"Spring Boot\"]\n    },\n]\n\nexport default function Index(props){\n    // \n    // const myRef = useRef()\n    // console.log(myRef.current)\n\n    const AllPosts = props.data.allMarkdownRemark.nodes;\n    const [selectedPosts,setSelectedPosts] = useState(AllPosts);\n    const {selectedCategory} = useContext(CategoryContext);\n    useEffect(() => {\n        selectedCategory === \"All\" ?\n        setSelectedPosts(AllPosts) :\n        setSelectedPosts(AllPosts.filter(list => list.frontmatter.category === selectedCategory))\n    }, [selectedCategory])\n    return(\n        <Layout uri={props.uri}>\n            <DIV width=\"90%\" laptop=\"row\" justify=\"space-between\" laptop_align=\"flex-start\">\n                <Column width=\"25%\">\n                    <Show mobile><SideMenuBar list={blogList}/></Show>\n                </Column>\n                <DIV laptop_width=\"70%\">\n                    <BlogCardContainer postList={selectedPosts}/>\n                    <Pagination/>\n                </DIV>\n            </DIV>\n        </Layout>\n    );\n}\n\n\nexport const query = graphql`\n    query{\n        allMarkdownRemark(\n            filter: {fileAbsolutePath: {regex: \"/blog/\"}},\n            sort: {fields: frontmatter___date}\n        ){\n            nodes {\n            frontmatter {\n                category\n                date\n                description\n                iconifyIconName\n                title\n            }\n            id\n            }\n        }\n    }\n`\n","import styled from 'styled-components'\n\nconst Line = styled.div`\n    width: 90%;\n    border-bottom: 2px dashed;\n    margin: 1em;\n`\nexport default Line;","import styled from \"styled-components\"\n\nconst LinkButton = styled.div`\n    cursor: pointer;\n    /* min-width: 2em; */\n    text-align: center;\n    font-size: ${props => props.size + \"px\"};\n    font-weight: ${props => props.checked ? \"bold\" : \"nomal\"};\n    /* text-decoration: ${props => props.checked ? \"underline\" : \"none\"}; */\n    &:hover{\n        text-decoration: underline;\n        font-weight: bold;\n    }\n`\nexport default LinkButton;"],"names":["Category","props","title","list","setCategory","useContext","CategoryContext","align","onClick","map","item","LinkButton","key","Categories","witdh","gap","style","marginTop","index","SearchBar","width","borderBottom","paddingBottom","fontWeight","placeholder","textAlign","SideMenuBar","HeadLine","uri","Layout","className","children","BlogCard","date","category","description","iconifyIconName","linkTo","to","display","flexDirection","alignItems","tablet","justify","height","minHeight","tablet_width","fontSize","opacity","order","tablet_order","icon","margin","BlogCardContainer","postList","post","id","frontmatter","Pagination","selectedCategory","useEffect","setPageNumber","useState","pageNumber","getStartInex","number","Math","ceil","sequence","Array","from","keys","x","checked","blogList","Index","AllPosts","data","allMarkdownRemark","nodes","selectedPosts","setSelectedPosts","filter","laptop","laptop_align","mobile","laptop_width","Line","styled","size"],"sourceRoot":""}